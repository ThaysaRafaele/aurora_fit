# Generated by Django 5.0.1 on 2025-10-07 03:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VideoCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('icon', models.CharField(blank=True, help_text='Nome do ícone (ex: FontAwesome)', max_length=50)),
                ('order', models.IntegerField(default=0, verbose_name='Ordem')),
            ],
            options={
                'verbose_name': 'Categoria de Vídeo',
                'verbose_name_plural': 'Categorias de Vídeos',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(verbose_name='Descrição')),
                ('video_file', models.FileField(blank=True, null=True, upload_to='videos/', verbose_name='Arquivo de Vídeo')),
                ('video_url', models.URLField(blank=True, help_text='URL do YouTube, Vimeo, etc.', verbose_name='URL do Vídeo')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails/', verbose_name='Miniatura')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Duração')),
                ('video_type', models.CharField(choices=[('recorded', 'Gravado'), ('live_archived', 'Live Arquivada')], default='recorded', max_length=20, verbose_name='Tipo')),
                ('is_public', models.BooleanField(default=False, verbose_name='Público?')),
                ('requires_subscription', models.BooleanField(default=True, verbose_name='Requer assinatura?')),
                ('views_count', models.IntegerField(default=0, verbose_name='Visualizações')),
                ('likes_count', models.IntegerField(default=0, verbose_name='Curtidas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Publicado em')),
                ('instructor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Instrutora')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos', to='videos.videocategory', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Vídeo',
                'verbose_name_plural': 'Vídeos',
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('scheduled_date', models.DateTimeField(verbose_name='Data e Hora')),
                ('duration_minutes', models.IntegerField(default=60, verbose_name='Duração (minutos)')),
                ('stream_url', models.URLField(blank=True, help_text='URL da transmissão (YouTube Live, etc.)', verbose_name='URL da Transmissão')),
                ('chat_enabled', models.BooleanField(default=True, verbose_name='Chat Habilitado?')),
                ('status', models.CharField(choices=[('scheduled', 'Agendada'), ('live', 'Ao Vivo'), ('finished', 'Finalizada'), ('cancelled', 'Cancelada')], default='scheduled', max_length=20, verbose_name='Status')),
                ('max_participants', models.IntegerField(blank=True, null=True, verbose_name='Máximo de Participantes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Instrutora')),
                ('registered_participants', models.ManyToManyField(blank=True, related_name='registered_lives', to=settings.AUTH_USER_MODEL, verbose_name='Participantes Registrados')),
                ('archived_video', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='live_source', to='videos.video', verbose_name='Vídeo Arquivado')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='videos.videocategory', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Aula ao Vivo',
                'verbose_name_plural': 'Aulas ao Vivo',
                'ordering': ['scheduled_date'],
            },
        ),
    ]
