# Generated by Django 5.0.1 on 2025-10-07 03:20

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=14, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, verbose_name='RG')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='Endereço')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=2, verbose_name='Estado')),
                ('zip_code', models.CharField(blank=True, max_length=10, verbose_name='CEP')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, verbose_name='Contato de Emergência')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Telefone de Emergência')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Matrícula')),
                ('modality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.plan', verbose_name='Plano')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Aluna',
                'verbose_name_plural': 'Alunas',
                'ordering': ['user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='MenstrualCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_start_date', models.DateField(verbose_name='Data de início do ciclo')),
                ('cycle_duration', models.IntegerField(default=28, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)], verbose_name='Duração do Ciclo')),
                ('has_symptoms', models.BooleanField(default=False, verbose_name='Apresenta sintomas?')),
                ('symptoms_description', models.TextField(blank=True, verbose_name='Descrição dos sintomas')),
                ('symptoms_intensity', models.CharField(blank=True, choices=[('light', 'Leve'), ('moderate', 'Moderado'), ('intense', 'Intenso')], max_length=20, verbose_name='Intensidade dos Sintomas')),
                ('observations', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menstrual_cycles', to='students.student')),
            ],
            options={
                'verbose_name': 'Ciclo Menstrual',
                'verbose_name_plural': 'Ciclos Menstruais',
                'ordering': ['-cycle_start_date'],
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_date', models.DateField(default=django.utils.timezone.now, verbose_name='Data da Medição')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Peso (kg)')),
                ('height', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Altura (m)')),
                ('neck', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Pescoço (cm)')),
                ('chest', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peitoral (cm)')),
                ('waist', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Cintura (cm)')),
                ('abdomen', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Abdômen (cm)')),
                ('hip', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Quadril (cm)')),
                ('right_arm', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Braço Direito (cm)')),
                ('left_arm', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Braço Esquerdo (cm)')),
                ('right_thigh', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Coxa Direita (cm)')),
                ('left_thigh', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Coxa Esquerda (cm)')),
                ('right_calf', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Panturrilha Direita (cm)')),
                ('left_calf', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Panturrilha Esquerda (cm)')),
                ('body_fat_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='% Gordura')),
                ('muscle_mass_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='% Massa Muscular')),
                ('bmi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='IMC')),
                ('observations', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='students.student')),
            ],
            options={
                'verbose_name': 'Medida',
                'verbose_name_plural': 'Medidas',
                'ordering': ['-measurement_date'],
            },
        ),
        migrations.CreateModel(
            name='Anamnesis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_goal', models.TextField(verbose_name='Objetivo Principal')),
                ('secondary_goals', models.TextField(blank=True, verbose_name='Objetivos Secundários')),
                ('has_health_issues', models.BooleanField(default=False, verbose_name='Possui problemas de saúde?')),
                ('health_issues_description', models.TextField(blank=True, verbose_name='Descrição dos problemas')),
                ('has_injuries', models.BooleanField(default=False, verbose_name='Possui lesões?')),
                ('injuries_description', models.TextField(blank=True, verbose_name='Descrição das lesões')),
                ('has_surgeries', models.BooleanField(default=False, verbose_name='Já fez cirurgias?')),
                ('surgeries_description', models.TextField(blank=True, verbose_name='Descrição das cirurgias')),
                ('takes_medication', models.BooleanField(default=False, verbose_name='Toma medicamentos?')),
                ('medication_list', models.TextField(blank=True, verbose_name='Lista de medicamentos')),
                ('activity_level', models.CharField(choices=[('sedentary', 'Sedentário'), ('light', 'Atividade Leve'), ('moderate', 'Atividade Moderada'), ('intense', 'Atividade Intensa'), ('athlete', 'Atleta')], default='sedentary', max_length=20, verbose_name='Nível de Atividade')),
                ('previous_exercises', models.TextField(blank=True, verbose_name='Atividades físicas anteriores')),
                ('smoker', models.BooleanField(default=False, verbose_name='Fumante?')),
                ('alcohol_consumption', models.CharField(blank=True, max_length=50, verbose_name='Consumo de álcool')),
                ('sleep_hours', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)], verbose_name='Horas de Sono')),
                ('observations', models.TextField(blank=True, verbose_name='Observações Gerais')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='anamnesis', to='students.student')),
            ],
            options={
                'verbose_name': 'Ficha de Anamnese',
                'verbose_name_plural': 'Fichas de Anamnese',
            },
        ),
    ]
